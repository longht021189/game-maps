/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
#[derive(Debug)]
pub struct NetworkRequestImpl {
    _unused: [u8; 0],
}
pub type NetworkRequest = NetworkRequestImpl;
pub const NetworkRequestMethod_NETWORK_REQUEST_METHOD_GET: NetworkRequestMethod = 0;
pub const NetworkRequestMethod_NETWORK_REQUEST_METHOD_POST: NetworkRequestMethod = 1;
pub const NetworkRequestMethod_NETWORK_REQUEST_METHOD_PUT: NetworkRequestMethod = 2;
pub const NetworkRequestMethod_NETWORK_REQUEST_METHOD_DELETE: NetworkRequestMethod = 3;
pub type NetworkRequestMethod = ::std::os::raw::c_int;
unsafe extern "C" {
    pub fn core_network_request_new(
        url: *const ::std::os::raw::c_char,
        method: NetworkRequestMethod,
    ) -> *mut NetworkRequest;
}
unsafe extern "C" {
    pub fn core_network_request_add_header(
        request: *mut NetworkRequest,
        value: *const ::std::os::raw::c_char,
    );
}
unsafe extern "C" {
    pub fn core_network_request_add_content(
        request: *mut NetworkRequest,
        content: *const ::std::os::raw::c_char,
    );
}
unsafe extern "C" {
    pub fn core_network_request_delete(request: *const NetworkRequest);
}
pub const NetworkResponseStatus_NETWORK_RESPONSE_STATUS_OK: NetworkResponseStatus = 200;
pub const NetworkResponseStatus_NETWORK_RESPONSE_STATUS_NO_CONTENT: NetworkResponseStatus = 204;
pub const NetworkResponseStatus_NETWORK_RESPONSE_STATUS_NOT_FOUND: NetworkResponseStatus = 404;
pub const NetworkResponseStatus_NETWORK_RESPONSE_STATUS_METHOD_NOT_ALLOWED: NetworkResponseStatus =
    405;
pub type NetworkResponseStatus = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug)]
pub struct NetworkResponse {
    pub status: NetworkResponseStatus,
    pub content: *mut ::std::os::raw::c_char,
    pub headers: *mut ::std::os::raw::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of NetworkResponse"][::std::mem::size_of::<NetworkResponse>() - 24usize];
    ["Alignment of NetworkResponse"][::std::mem::align_of::<NetworkResponse>() - 8usize];
    ["Offset of field: NetworkResponse::status"]
        [::std::mem::offset_of!(NetworkResponse, status) - 0usize];
    ["Offset of field: NetworkResponse::content"]
        [::std::mem::offset_of!(NetworkResponse, content) - 8usize];
    ["Offset of field: NetworkResponse::headers"]
        [::std::mem::offset_of!(NetworkResponse, headers) - 16usize];
};
unsafe extern "C" {
    pub fn core_network_response_delete(response: *mut NetworkResponse);
}
#[repr(C)]
#[derive(Debug)]
pub struct NetworkFilter {
    pub next: *mut NetworkFilter,
    pub value: *mut ::std::os::raw::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of NetworkFilter"][::std::mem::size_of::<NetworkFilter>() - 16usize];
    ["Alignment of NetworkFilter"][::std::mem::align_of::<NetworkFilter>() - 8usize];
    ["Offset of field: NetworkFilter::next"][::std::mem::offset_of!(NetworkFilter, next) - 0usize];
    ["Offset of field: NetworkFilter::value"]
        [::std::mem::offset_of!(NetworkFilter, value) - 8usize];
};
unsafe extern "C" {
    pub fn core_network_override(request: *mut NetworkRequest) -> *mut NetworkResponse;
}
unsafe extern "C" {
    pub fn core_network_fetch(request: *const NetworkRequest) -> *mut NetworkResponse;
}
unsafe extern "C" {
    pub fn core_network_filters() -> *mut NetworkFilter;
}
unsafe extern "C" {
    pub fn core_network_filters_delete(value: *mut NetworkFilter);
}
#[repr(C)]
#[derive(Debug)]
pub struct AppConfig {
    pub mapgenie_resources_path: *const ::std::os::raw::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of AppConfig"][::std::mem::size_of::<AppConfig>() - 8usize];
    ["Alignment of AppConfig"][::std::mem::align_of::<AppConfig>() - 8usize];
    ["Offset of field: AppConfig::mapgenie_resources_path"]
        [::std::mem::offset_of!(AppConfig, mapgenie_resources_path) - 0usize];
};
unsafe extern "C" {
    pub fn core_app_config(config: AppConfig);
}
